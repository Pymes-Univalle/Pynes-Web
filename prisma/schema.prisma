generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model almaceninsumos {
  Insumos_id         Int
  Proveedores_id     Int
  cantidad           String      @db.VarChar(45)
  estado             Int         @default(1) @db.TinyInt
  fechaRegistro      DateTime?   @default(now()) @db.DateTime(0)
  fechaActualizacion DateTime    @db.DateTime(0)
  insumo             insumo      @relation(fields: [Insumos_id], references: [idInsumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_Insumos_has_Proveedores_Insumos1")
  proveedores        proveedores @relation(fields: [Proveedores_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Insumos_has_Proveedores_Proveedores1")

  @@id([Insumos_id, Proveedores_id])
  @@index([Insumos_id], map: "fk_Insumos_has_Proveedores_Insumos1_idx")
  @@index([Proveedores_id], map: "fk_Insumos_has_Proveedores_Proveedores1_idx")
}

model atributo {
  idAtributo Int       @id @default(autoincrement())
  nombre     String    @db.VarChar(45)
  valor      String    @db.VarChar(45)
  idProducto Int
  productos  productos @relation(fields: [idProducto], references: [idProductos], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_productos5")

  @@index([idProducto], map: "id_idx")
}

model categoria {
  idCategoria Int         @id
  nombre      String      @db.VarChar(60)
  productos   productos[]
}

model cliente {
  idCliente          Int       @id
  direccion          String    @db.VarChar(60)
  estado             Int       @default(1) @db.TinyInt
  fechaRegistro      DateTime? @default(now()) @db.DateTime(0)
  fechaActualizacion DateTime  @db.DateTime(0)
  usuario            usuario   @relation(fields: [idCliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Cliente_usuario1")
  venta              venta[]

  @@index([idCliente], map: "fk_Cliente_usuario1_idx")
}

model detalleventas {
  id                 Int       @id
  idVenta            Int
  idProducto         Int
  cantidad           Int       @db.TinyInt
  nit                String    @db.VarChar(45)
  precioUnitario     Decimal   @db.Decimal(18, 2)
  inporte            Decimal   @db.Decimal(18, 2)
  estado             Int       @default(1) @db.TinyInt
  fechaRegistro      DateTime? @default(now()) @db.DateTime(0)
  fechaActualizacion DateTime  @db.DateTime(0)
  productos          productos @relation(fields: [idProducto], references: [idProductos], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_producto")
  venta              venta     @relation(fields: [idVenta], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_venta")

  @@index([idVenta], map: "id_idx")
  @@index([idProducto], map: "id_idx1")
}

model insumo {
  idInsumo       Int              @id @default(autoincrement())
  nombre         String           @db.VarChar(45)
  precio         Decimal          @db.Decimal(18, 2)
  cantidad       Int
  almaceninsumos almaceninsumos[]
  produccion     produccion[]
}

model organizacion {
  idOrganizacion Int         @id
  latitud        Float       @db.Float
  longitud       Float       @db.Float
  crearProductos Int?        @db.TinyInt
  nit            String      @db.VarChar(45)
  usuario        usuario     @relation(fields: [idOrganizacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Organizacion_usuario1")
  productor      productor[]
}

model produccion {
  id                 Int       @id @default(autoincrement())
  idProductos        Int
  idInsumo           Int
  idProductor        Int
  estado             Int       @default(1) @db.TinyInt
  canrtidad          Int
  fechaRegistro      DateTime? @default(now()) @db.DateTime(0)
  fechaActualizacion DateTime  @db.DateTime(0)
  insumo             insumo    @relation(fields: [idInsumo], references: [idInsumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_insumo")
  productor          productor @relation(fields: [idProductor], references: [idProductor], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_productor2")
  productos          productos @relation(fields: [idProductos], references: [idProductos], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_productos2")

  @@index([idInsumo], map: "fk_id_insumo_idx")
  @@index([idProductor], map: "fk_id_productor_idx")
  @@index([idProductos], map: "fk_id_productos_idx")
}

model productor {
  idProductor        Int          @id
  puesto             String       @db.VarChar(45)
  latitud            Float        @db.Float
  longitud           Float        @db.Float
  idOrganizacion     Int
  estado             Int          @default(1) @db.TinyInt
  fechaRegistro      DateTime?    @default(now()) @db.DateTime(0)
  fechaActualizacion String       @db.VarChar(45)
  produccion         produccion[]
  usuario            usuario      @relation(fields: [idProductor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Productores_usuario1")
  organizacion       organizacion @relation(fields: [idOrganizacion], references: [idOrganizacion], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_organizacion")
  productos          productos[]

  @@index([idOrganizacion], map: "id_idx")
}

model productos {
  idProductos   Int             @id @default(autoincrement())
  nombre        String          @db.VarChar(45)
  precio        Decimal         @db.Decimal(18, 2)
  descripcion   String?         @db.VarChar(100)
  idCategoria   Int
  cantidad      Int
  idProductor   Int
  atributo      atributo[]
  detalleventas detalleventas[]
  produccion    produccion[]
  categoria     categoria       @relation(fields: [idCategoria], references: [idCategoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_categoria")
  productor     productor       @relation(fields: [idProductor], references: [idProductor], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_productor")
  ruta          ruta[]

  @@index([idCategoria], map: "id_idx")
  @@index([idProductor], map: "id_idx1")
}

model proveedores {
  id             Int              @id @default(autoincrement())
  nombre         String           @db.VarChar(45)
  celular        String           @db.VarChar(45)
  almaceninsumos almaceninsumos[]
}

model ruta {
  id                 Int       @id @default(autoincrement())
  ruta               String    @db.VarChar(45)
  idProducto         Int
  estado             Int       @db.TinyInt
  fechaRegistro      DateTime? @default(now()) @db.DateTime(0)
  fechaActualizacion DateTime  @db.DateTime(0)
  productos          productos @relation(fields: [idProducto], references: [idProductos], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_productos")

  @@index([idProducto], map: "id_idx")
}

model usuario {
  id                 Int           @id @default(autoincrement())
  nombre             String        @db.VarChar(45)
  correo             String        @db.VarChar(45)
  contrasena         String        @db.VarChar(45)
  celular            String        @db.VarChar(45)
  estado             Int           @default(1) @db.TinyInt
  fechaRegistro      DateTime?     @default(now()) @db.DateTime(0)
  fechaActualizacion DateTime      @db.DateTime(0)
  cliente            cliente?
  organizacion       organizacion?
  productor          productor?
}

model venta {
  id            Int             @id @default(autoincrement())
  idCliente     Int
  total         Decimal         @db.Decimal(18, 2)
  estado        Int             @default(1) @db.TinyInt
  fechaRegistro DateTime        @default(now()) @db.DateTime(0)
  detalleventas detalleventas[]
  cliente       cliente         @relation(fields: [idCliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cliente")

  @@index([idCliente], map: "id_idx")
}
